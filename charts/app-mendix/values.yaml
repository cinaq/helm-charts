# replicaCount: 2 | 1 leader, 1 slave
replicaCount: 1

image:
  repository: "cinaq/hackme"
  tag: "latest"
  pullPolicy: "Always"
imagePullSecrets:
  - name: dockerconfigjson

podSecurityContext: {}
  # runAsUser: 1000
  # runAsGroup: 1000
  # fsGroup: 1000

licenseId:
licenseKey:

env: []
  # - name: SCHEDULED_EVENTS
  #   value: ALL
  # - name: MX_Module_Constant
  #   value: test
  # - name: MX_App_EnvironmentName
  #   value: acceptance
  # - name: TZ
  #   value: Europe/Amsterdam
  # - name: PORT
  #   value: 8080
  # - name: MXRUNTIME_ApplicationRootUrl
  #   value: "https://mx-app.example.com/"
  # - name: MXRUNTIME_DatabaseHost
  #   value: "mendix-postgres:5432"
  # - name: MXRUNTIME_DatabaseType
  #   value: "PostgreSQL"
  # - name: MXRUNTIME_DatabaseName
  #   value: "mendix"
  # - name: S3_BUCKET_NAME
  #   value: "test-mx-app"
  # - name: S3_ENDPOINT
  #   value: "http://minio:9000"
  # - name: ADMIN_PASSWORD
  #   value: "Hello0123!!"
  # - name: MXRUNTIME_DatabaseUserName
  #   value: "postgres"
  # - name: MXRUNTIME_DatabasePassword
  #   value: "postgres12!"
  # - name: S3_ACCESS_KEY_ID
  #   value: "keyid"
  # - name: S3_SECRET_ACCESS_KEY
  #   value: "accesskey"

# Secret name with mendix application runtime variables. Will be loaded as pod environment variables
#  Example data
#  data:
#   ADMIN_PASSWORD: SGVsbG8wMTIzY2xlYXIK (base64)
secretName: ""

nodeSelector: {}

tolerations: []

affinity: {}

resources: {}
  # limits:
  #   cpu: 1
  #   memory: 1Gi
  # requests:
  #   cpu: 0.5
  #   memory: 512Mi

annotations: {}

service:
  type: ClusterIP
  externalPort: 80
  internalPort: 8080

ingress:
  enabled: true
  ingressClassName: nginx
  domain: app.example.com
  annotations: {}
  addHosts: false
  hosts: []
  tls:
    enabled: false
  # Secrets must be manually created in the namespace.
    secretName: secret-tls

# Enable to create openshift route
route:
  enabled: false
  host: app.example.com
  annotations: {}
  tls:
    enabled: false

networkPolicy:
  enabled: true
  ingress:
    allowed: true
autoscale:
  enabled: false
  minSlaveReplicas: 1
  maxSlaveReplicas: 3
  targetCPUUtilizationPercentage: 70

readinessProbe:
  enabled: true
  type: httpGet
  httpGet:
    path: /
    port: 8080
  exec: 
    command:
  tcpSocket:
    port:
  initialDelaySeconds: 120
  periodSeconds: 30
  failureThreshold: 30
  timeoutSeconds: 10
  successThreshold: 1

livenessProbe:
  enabled: true
  type: httpGet
  httpGet:
    path: /
    port: 8080
  exec: 
    command:
  tcpSocket:
    port:
  initialDelaySeconds: 120
  periodSeconds: 30
  failureThreshold: 30
  timeoutSeconds: 10
  successThreshold: 1

lifecycle:
  prestop:
    enabled: false
    command: /opt/eap/bin/stop.sh

metrics:
  enabled: true
  runtimeLoginMetricsEnabled: true
  # example: http://loki-stack:3100/loki/api/v1/push
  trendsForwarderUrl: ""

persistence:
  enabled: false

  # if enabled, a pv, pvc resources will be created and mounted to statefulset
  nfsVolume:
    enabled: false
    name: mendix-nfs
    server: nfs.example.com
    path: /mnt/mendixdata
    storage: 10Gi
    subPath: "/app"

  extraVolumes: []
    # - name: extra-volume
    #   persistentVolumeClaim:
    #     claimName: precreated-pvc

  extraVolumeMounts: []
    # - name: extra-volume
    #   mountPath: /path/to/mount
    #   subPath: "/app"