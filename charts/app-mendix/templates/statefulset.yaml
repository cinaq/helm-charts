---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "app-mendix.fullname" . }}
  labels:
    {{- include "app-mendix.labels" . | nindent 4 }}
spec:
  replicas: {{ default 1 .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "app-mendix.selectorLabels" . | nindent 6 }}
  updateStrategy:
    type: RollingUpdate
  serviceName: {{ template "app-mendix.fullname" . }}
  minReadySeconds: 10 
  template:
    metadata:
      labels:
        {{- include "app-mendix.labels" . | nindent 8 }}
      {{- with .Values.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.internalPort }}
              name: app
            {{- if .Values.metrics.enabled }}
            - containerPort: {{ add (int .Values.service.internalPort) 2 }}
              name: metrics
            - containerPort: 9273
              name: metrics-mendix
            {{- end }}
          env:
            - name: NON_MENDIX_PUBLIC_CLOUD
              value: "true"
            - name: MXRUNTIME_Metrics_Registries
              value: '[{"type": "prometheus", "settings": {"step": "5m"}}]'
            - name: RUNTIME_LOGIN_METRICS_ENABLED
              value: {{ .Values.metrics.runtimeLoginMetricsEnabled | quote }}
            - name: TRENDS_FORWARDER_URL
              value: {{ .Values.metrics.trendsForwarderUrl | quote }}
          {{- if .Values.licenseId }}
            - name: LICENSE_ID
              value: {{ .Values.licenseId }}
          {{- end }}
          {{- if .Values.licenseKey }}
            - name: LICENSE_KEY
              value: {{ .Values.licenseKey }}
          {{- end }}
          {{- range .Values.env }}
            - name: {{ .name | quote}}
              value: {{ .value | quote}}
          {{- end }}
          {{- if .Values.secretName }}
          envFrom:
            - secretRef:
                name: {{ .Values.secretName }}
          {{- end }}
          startupProbe:
            httpGet:
              path: /
              port: 8080
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
          
          # Start liveness checks only after the startupProbe succeeds.
          # if this fails, the container is restarted
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}

          # Start readiness checks after startupProbe succeeds.
          # If this fails, the Pod is removed from the Service endpoint list.
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}

          {{- if .Values.lifecycle.prestop.enabled }}
          lifecycle:
            preStop:
              exec:
                command: [{{ .Values.lifecycle.prestop.command }}]
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
          {{- with .Values.persistence.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.persistence.nfsVolume.enabled }}
            - name: {{ .Values.persistence.nfsVolume.name }}
              mountPath: /opt/mendix/build/data/files/
              {{- if .Values.persistence.nfsVolume.subPath }}
              subPath: {{ .Values.persistence.nfsVolume.subPath }}
              {{- end }}
          {{- end }}
          {{- end }}
      {{- if .Values.persistence.enabled }}
      volumes:
        - name: empty-dir
          emptyDir: {}
      {{- with .Values.persistence.extraVolumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.persistence.nfsVolume.enabled }}
        - name: {{ .Values.persistence.nfsVolume.name }}
          persistentVolumeClaim:
            claimName: {{ template "app-mendix.fullname" . }}
      {{- end }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
